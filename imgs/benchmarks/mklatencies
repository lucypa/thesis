#!/bin/sh

: "${KEY:=outside below }"
#
# UDP echo test generatees

#
#              Requested  $1
# THROUGHPUT   Echoed     $2
#              Generated  $3
#
# PACKETSIZE              $4
#
#              min	  $5
# LATENCY      mean       $6
#              max        $7
#              stddev     $8
#              median     $9
# CPU          %          $10

gawk -v "key=${KEY}" -F ',' '
function fname()
{
    f = FILENAME
    if (f ~ /5-comp/)
        f = "seL4"
    else if (f ~ /linux/)
       f = "Linux"
    return f
}

function stddev(sumsqr, sum, count)
{
	if (count > 1)
		return sqrt((sumsqr - (sum * sum)/count)/(count-1))

	return sqrt((sumsqr - (sum * sum)))
}

function plot()
{
	i = 1;
	for (x in bps) {
	    if (!(x in cpucount)) {
		cpucount[x] = 1;
	    }
	    points[i++] = sprintf("%06d",x) " " bps[x]/count[x] " " bpssqr[x]/count[x] " " cpu[x]/cpucount[x] " " stddev(cpusqr[x], cpu[x], cpucount[x])
	}
	if (i == 1) {
	    return
        }
	plotcmd = plotcmd inter " \"-\" using 1:2:3 axes x1y1 title \"" curfile " RTT\"  with errorlines ls " ls++
	inter = ", "
	asort(points)
	for (x = 1; x < i; x++)
		pointset = pointset "\n"  points[x];
	pointset = pointset "\ne"
	delete cpu
	delete cpusqr
	delete bps
	delete bpssqr
	delete points
	delete pktsizes
}

BEGIN {
	million=1.0e6
	ls = 1
        ltyp[1] = 1
        ltyp[2] = 2
        ltyp[3] = 4
        ltyp[4] = 7
        ltyp[5] = 1
        ltyp[6] = 3
        ltyp[7] = 6
        ltyp[8] = 8
	printf "set xlabel \"Load (Mb/s)\" offset 0,0.7,0\nset ylabel \"Median RTT (us)\" offset 1,0,0\n"
	print "set yrange [0:10000]"
#	print "set xrange [0:1500]"
        print "set xtics nomirror rotate"
        print "set ytics nomirror"
	print "set bmargin 7.5"
	print "set key " key
#        print "set size 0.7 , 0.9"
        print "set size 1,1.3"
        print "set style line 1 lw 6 lt 1"
#	for (i = 2; i < 9; i++)
#	    print "set style line " i " lw 2 lt " ltyp[i]
	# Linux yellow
	print "set style line 1 lw 6 lt 7 dt 1 lc rgb '0xfbbd05'"
	print "set style line 2 lw 2 lt 7 ps .5 dt 1 lc rgb '0xfbbd05'"
	# seL4 green
	print "set style line 3 lw 2 lt 7 ps .5 dt 1 lc rgb '0xa5d162'"
	print "set style line 4 lw 2 lt 7 dt 3 lc rgb '0xa5d162'"
	print "set style line 5 lw 2 lt 6"
	print "set style line 6 lw 2 lt 8"
	print "set term postscript eps enhanced color size 2,1.4"
	print "set output \"latency.eps\""


	inter = ""
#	plotcmd = "plot 1.0e9 * (x / (x + 38)) title \"Wire Speed\" with lines ls " ls "axes x1y2"
	plotcmd = "plot "
	ls++
}

$1 ~ /#/ { next }

NF == 11 || NF == 10 || NF == 9 {
	if (fname() != curfile) {
	    if (curfile)
		plot();
	    curfile = fname();
	    delete cpucount
	    delete count
	}

# Measure in Mbs not kpackets per second
#	bitsps = $2/1000
	pktsz = $4 * 8 # bits
#	pps = bitsps / pktsz
	pps = $2/1000000
#	load = $3 / pktsz /1000
	load = int($3 / 1000000)
    latency = $9
	stdev = $8

	if (NF == 10) {
	   percentcpu = $10
	   cpu[load] += percentcpu
	   cpusqr[load] += percentcpu * percentcpu
	   cpucount[load] = cpucount[load] + 1
	}

	if (NF == 11) {
	    percentcpu = ($11 - $10) * 100 / $11
	    cpu[load] += percentcpu
	    cpusqr[load] += percentcpu * percentcpu
	    cpucount[load] = cpucount[load] + 1
	}
	bps[load] += latency
	bpssqr[load] += stdev
	count[load] = count[load] + 1
	next
    }

END {
	if (curfile == "")
		curfile = fname()
	plot();
	print plotcmd
	print pointset
}
' $@ | tee latency.gnuplot |gnuplot
